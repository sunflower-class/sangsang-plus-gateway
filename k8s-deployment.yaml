apiVersion: apps/v1
kind: Deployment
metadata:
  name: sangsang-plus-gateway
  labels:
    app: sangsang-plus-gateway
spec:
  replicas: 2  # HA를 위해 2개로 증가
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: sangsang-plus-gateway
  template:
    metadata:
      labels:
        app: sangsang-plus-gateway
    spec:
      # Pod Anti-affinity 추가 - 파드들이 다른 노드에 분산
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: sangsang-plus-gateway
              topologyKey: kubernetes.io/hostname
      containers:
      - name: gateway
        image: buildingbite/sangsangplus-gateway:dev
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        # User 서비스 URL
        - name: USER_SERVICE_URL
          value: "http://user-service.sangsangplus-backend.svc.cluster.local"
        
        # Product 서비스 URL
        - name: PRODUCT_SERVICE_URL
          value: "http://product-details-service.sangsangplus-backend.svc.cluster.local"
        
        # Review 서비스 URL
        - name: REVIEW_SERVICE_URL
          value: "http://review-service.sangsangplus-backend.svc.cluster.local"
        
        # Customer 서비스 URL
        - name: CUSTOMER_SERVICE_URL
          value: "http://customer-service.sangsangplus-backend.svc.cluster.local"
        
        # Product Details 서비스 URL
        - name: PRODUCT_DETAILS_SERVICE_URL
          value: "http://product-details-service.sangsangplus-backend.svc.cluster.local"
        
        # ABTest 서비스 URL
        - name: ABTEST_SERVICE_URL
          value: "http://abtest-service.sangsangplus-backend.svc.cluster.local"

        # Notification 서비스 URL
        - name: NOTIFICATION_SERVICE_URL
          value: "http://notification-service.sangsangplus-backend.svc.cluster.local"
        
        # Frontend URL
        - name: FRONTEND_URL
          value: "https://oauth.buildingbite.com"

        # KeyCloak 설정
        - name: KEYCLOAK_AUTH_SERVER_URL
          value: "http://keycloak:8080"
        
        - name: KEYCLOAK_REALM
          value: "sangsang-plus"
        
        - name: KEYCLOAK_CLIENT_ID
          value: "gateway-client"
        
        - name: KEYCLOAK_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: gateway-secrets
              key: keycloak-client-secret
        
        # JWT 공개키 설정 - JWKS 엔드포인트 사용
        - name: KEYCLOAK_JWKS_URL
          value: "http://keycloak:8080/realms/sangsang-plus/protocol/openid-connect/certs"
        
        resources:
          requests:
            memory: "400Mi"
            cpu: "70m"
          limits:
            memory: "768Mi"
            cpu: "600m"
        
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: sangsang-plus-gateway
spec:
  selector:
    app: sangsang-plus-gateway
  ports:
    - protocol: TCP
      port: 80          # 클러스터 내부에서 접근할 포트
      targetPort: 8080  # 컨테이너 내부 포트
  type: ClusterIP  # Ingress를 통해 접근하므로 ClusterIP 사용
---
---
# HorizontalPodAutoscaler for Gateway
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sangsang-plus-gateway
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sangsang-plus-gateway
  minReplicas: 2
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# PodDisruptionBudget for Gateway
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: sangsang-plus-gateway
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: sangsang-plus-gateway
---
# Secret 생성은 별도 명령어로 처리 (민감정보 보안)
# kubectl create secret generic gateway-secrets \
#   --from-literal=jwt-secret='your-jwt-secret' \
#   --from-literal=google-client-id='your-google-client-id' \
#   --from-literal=google-client-secret='your-google-client-secret'
