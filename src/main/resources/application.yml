server:
  port: 8080

spring:
  application:
    name: gateway-service
  main:
    web-application-type: reactive
  
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: ${USER_SERVICE_URL:http://user-service.user-service.svc.cluster.local}
          predicates:
            - Path=/api/users/**
          filters:
            - JwtAuth
            
        - id: product-service
          uri: ${PRODUCT_SERVICE_URL:http://product-service.product-service.svc.cluster.local}
          predicates:
            - Path=/api/products/**
          filters:
            - JwtAuth
        - id: keycloak_admin
          uri: http://keycloak:8080
          predicates:
            - Path=/admin/**, /realms/**
          filters:
            - StripPrefix=0
      
      # default-filters:
      #   - name: RequestRateLimiter
      #     args:
      #       redis-rate-limiter.replenishRate: 10
      #       redis-rate-limiter.burstCapacity: 20

  
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    consumer:
      group-id: gateway-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "https://oauth.buildingbite.com/login/oauth2/code/{registrationId}"
            scope:
              - email
              - profile
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://keycloak:8080/realms/sangsang-plus}

# JWT Configuration (deprecated - using KeyCloak)
jwt:
  secret: ${JWT_SECRET:mySecretKey}
  access-token-expiration: 3600000  # 1 hour in milliseconds
  refresh-token-expiration: 2592000000  # 30 days in milliseconds

# KeyCloak Configuration
keycloak:
  auth-server-url: ${KEYCLOAK_AUTH_SERVER_URL:http://keycloak:8080}
  realm: ${KEYCLOAK_REALM:sangsang-plus}
  resource: ${KEYCLOAK_CLIENT_ID:gateway-client}
  credentials:
    secret: ${KEYCLOAK_CLIENT_SECRET:your-client-secret}
  use-resource-role-mappings: true
  bearer-only: true
  ssl-required: none


# Service URLs
user-service:
  url: ${USER_SERVICE_URL:http://user-service}

product-service:
  url: ${PRODUCT_SERVICE_URL:http://product-service}

# App Configuration
app:
  oauth2:
    redirectUri: ${FRONTEND_URL:https://buildingbite.com}


logging:
  level:
    com.example.gateway: DEBUG
    org.springframework.security: INFO
    org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: DEBUG
    org.springframework.context.annotation: DEBUG
    org.springframework.web: DEBUG
    org.springframework.validation: DEBUG
    org.springframework.boot.web.servlet.support: DEBUG